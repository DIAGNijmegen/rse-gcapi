name: CI

on:
  push:
  pull_request:
  release:
    types:
      - published
  schedule:
    - cron: '34 7 * * 1-5'

env:
  MINIMUM_PYTHON_VERSION: '3.10'

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  precommit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ env.MINIMUM_PYTHON_VERSION }}
      - name: Run static code inspections
        run: uv run pre-commit run --all-files

  build:
    runs-on: ubuntu-latest
    permissions:
      # These permissions are needed to interact with GitHub's OIDC Token endpoint.
      id-token: write
      contents: read
    strategy:
      fail-fast: false # Try to work around ECS errors
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13", "3.14"]
    steps:
      - uses: actions/checkout@v4
      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}
      - name: Add gc.localhost to /etc/hosts
        run: sudo echo "127.0.0.1 gc.localhost\n127.0.0.1 minio.localhost" | sudo tee -a /etc/hosts
      - name: Install Minio Client binary (mc)
        run: |
          mkdir -p /opt/mc
          wget -q https://dl.min.io/client/mc/release/linux-amd64/archive/mc.RELEASE.2025-07-16T15-35-03Z -O /opt/mc/mc
          echo "a5c3695b6f76ed958c0f099795f32091fced0d748ddc749c8b24e07681bbfbb9  /opt/mc/mc" | shasum -c - || exit 1
          chmod a+x /opt/mc/mc
          sudo mv /opt/mc/mc /usr/local/bin/
          rm -r /opt/mc
      - name: install crane
        run: |
          mkdir -p /opt/crane
          wget -q https://github.com/google/go-containerregistry/releases/download/v0.19.0/go-containerregistry_Linux_x86_64.tar.gz -O /opt/crane/src.tar.gz
          echo "daa629648e1d1d10fc8bde5e6ce4176cbc0cd48a32211b28c3fd806e0fa5f29b  /opt/crane/src.tar.gz" | shasum -c - || exit 1
          tar -C /opt/crane/ -xzvf /opt/crane/src.tar.gz crane
          chmod a+x /opt/crane/crane
          sudo mv /opt/crane/crane /usr/local/bin/
          rm -r /opt/crane
      - name: Install system dependencies
        run: |
          sudo apt-get -qq update
          sudo apt-get -qq install -y --no-install-recommends \
            libpq-dev \
            libcurl4-openssl-dev \
            libssl-dev
      - name: Run uv
        run: |
          uv run pytest --cov-branch --cov-report term-missing --cov=tests/ --cov=gcapi/

  deploy:
    if: github.event_name == 'release'
    needs: [precommit, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ env.MINIMUM_PYTHON_VERSION }}
      - name: Upload to pypi
        env:
          UV_PUBLISH_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          uv build
          uv publish

  deploy-documentation:
    if: github.event_name == 'release'
    needs: [deploy]
    permissions:
      contents: write # Permission required to write to gh-pages branch
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ env.MINIMUM_PYTHON_VERSION }}
      - name:
        run: |
          uv run mkdocs gh-pages --force
