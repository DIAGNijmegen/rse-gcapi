# Generated by Django 1.11.11 on 2018-03-20 18:38
from __future__ import unicode_literals

import re

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import grandchallenge.challenges.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("auth", "0008_alter_user_username_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="ComicSite",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "short_name",
                    models.SlugField(
                        default="",
                        help_text="short name used in url, specific css, files etc. No spaces allowed",
                        unique=True,
                        validators=[
                            grandchallenge.challenges.models.validate_nounderscores,
                            django.core.validators.RegexValidator(
                                re.compile("^[-a-zA-Z0-9_]+\\Z", 32),
                                "Enter a valid 'slug' consisting of letters, numbers, underscores or hyphens.",
                                "invalid",
                            ),
                            django.core.validators.MinLengthValidator(1),
                        ],
                    ),
                ),
                (
                    "skin",
                    models.CharField(
                        default="public_html/project.css",
                        help_text="css file to include throughout this project. relative to project data folder",
                        max_length=225,
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Short summary of this project, max 1024 characters.",
                        max_length=1024,
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="The name of the challenge that is displayed on the All Challenges page. If this is blank the short name of the challenge will be used.",
                        max_length=64,
                    ),
                ),
                (
                    "logo",
                    models.CharField(
                        default="public_html/logo.png",
                        help_text="100x100 pixel image file to use as logo in projects overview. Relative to project datafolder",
                        max_length=255,
                    ),
                ),
                (
                    "header_image",
                    models.CharField(
                        blank=True,
                        help_text="optional 658 pixel wide Header image which will appear on top of each project page top of each project. Relative to project datafolder. Suggested default:public_html/header.png",
                        max_length=255,
                    ),
                ),
                (
                    "hidden",
                    models.BooleanField(
                        default=True,
                        help_text="Do not display this Project in any public overview",
                    ),
                ),
                (
                    "hide_signin",
                    models.BooleanField(
                        default=False,
                        help_text="Do no show the Sign in / Register link on any page",
                    ),
                ),
                (
                    "hide_footer",
                    models.BooleanField(
                        default=False,
                        help_text="Do not show the general links or the grey divider line in page footers",
                    ),
                ),
                (
                    "disclaimer",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Optional text to show on each page in the project. For showing 'under construction' type messages",
                        max_length=2048,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "workshop_date",
                    models.DateField(
                        blank=True,
                        help_text="Date on which the workshop belonging to this project will be held",
                        null=True,
                    ),
                ),
                (
                    "event_name",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="The name of the event the workshop will be held at",
                        max_length=1024,
                        null=True,
                    ),
                ),
                (
                    "event_url",
                    models.URLField(
                        blank=True,
                        help_text="Website of the event which will host the workshop",
                        null=True,
                    ),
                ),
                (
                    "is_open_for_submissions",
                    models.BooleanField(
                        default=False,
                        help_text="This project currently accepts new submissions. Affects listing in projects overview",
                    ),
                ),
                (
                    "submission_page_name",
                    models.CharField(
                        blank=True,
                        help_text="If the project allows submissions, there will be a link in projects overview going directly to you project/<submission_page_name>/. If empty, the projects main page will be used instead",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "number_of_submissions",
                    models.IntegerField(
                        blank=True,
                        help_text="The number of submissions have been evalutated for this project",
                        null=True,
                    ),
                ),
                (
                    "last_submission_date",
                    models.DateField(
                        blank=True,
                        help_text="When was the last submission evaluated?",
                        null=True,
                    ),
                ),
                (
                    "offers_data_download",
                    models.BooleanField(
                        default=False,
                        help_text="This project currently accepts new submissions. Affects listing in projects overview",
                    ),
                ),
                (
                    "number_of_downloads",
                    models.IntegerField(
                        blank=True,
                        help_text="How often has the dataset for this project been downloaded?",
                        null=True,
                    ),
                ),
                (
                    "publication_url",
                    models.URLField(
                        blank=True,
                        help_text="URL of a publication describing this project",
                        null=True,
                    ),
                ),
                (
                    "publication_journal_name",
                    models.CharField(
                        blank=True,
                        help_text="If publication was in a journal, please list the journal name here We use <a target='new' href='https://www.ncbi.nlm.nih.gov/nlmcatalog/journals'>PubMed journal abbreviations</a> format",
                        max_length=225,
                        null=True,
                    ),
                ),
                (
                    "require_participant_review",
                    models.BooleanField(
                        default=False,
                        help_text="If ticked, new participants need to be approved by project admins before they can access restricted pages. If not ticked, new users are allowed access immediately",
                    ),
                ),
                (
                    "use_registration_page",
                    models.BooleanField(
                        default=True,
                        help_text="If true, show a registration page on the challenge site.",
                    ),
                ),
                (
                    "registration_page_text",
                    models.TextField(
                        blank=True,
                        default="",
                        help_text="The text to use on the registration page, you could include a data usage agreement here. You can use HTML markup here.",
                    ),
                ),
                (
                    "use_evaluation",
                    models.BooleanField(
                        default=False,
                        help_text="If true, use the automated evaluation system. See the evaluation page created in the Challenge site.",
                    ),
                ),
                (
                    "admins_group",
                    models.OneToOneField(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="admins_of_challenge",
                        to="auth.Group",
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "participants_group",
                    models.OneToOneField(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="participants_of_challenge",
                        to="auth.Group",
                    ),
                ),
            ],
            options={
                "verbose_name": "challenge",
                "verbose_name_plural": "challenges",
            },
        )
    ]
